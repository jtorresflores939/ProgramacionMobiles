//Joaquin Torres Flores 
// Clase Empleado
abstract class Empleado(
    val nombre: String,
    val apellido: String,
    val edad: Int,
    val salario: Double
) {
    abstract fun calcularPago(): Double
}

// Se crea la subclase empleado a tiempo completo
class EmpleadoTiempoCompleto(
    nombre: String,
    apellido: String,
    edad: Int,
    salario: Double,
    private val horasTrabajadas: Int,
    private val tarifaHora: Double
) : Empleado(nombre, apellido, edad, salario) {

    override fun calcularPago(): Double {
        return salario + (horasTrabajadas * tarifaHora)
    }
}

// Se crea la subclase EmpleadoMedioTiempo
class EmpleadoMedioTiempo(
    nombre: String,
    apellido: String,
    edad: Int,
    salario: Double,
    private val horasTrabajadas: Int,
    private val tarifaHora: Double,
    private val diasTrabajados: Int
) : Empleado(nombre, apellido, edad, salario) {

    override fun calcularPago(): Double {
        return salario + (horasTrabajadas * tarifaHora * diasTrabajados)
    }
}

fun main() {
    // Se crea instancias de las subclases y se ejecuta operaciones de prueba
    val empleadoTiempoCompleto = EmpleadoTiempoCompleto("Billy", "Soe", 30, 2000.0, 40, 10.0)
    val empleadoMedioTiempo = EmpleadoMedioTiempo("Mamamia", "Garcia", 25, 1500.0, 20, 10.0, 5)

    println("Pago del empleado a tiempo completo: ${empleadoTiempoCompleto.calcularPago()}")
    println("Pago del empleado a medio tiempo: ${empleadoMedioTiempo.calcularPago()}")
}
